import telethon
import logging
import sqlite3
import asyncio
import datetime
import random
from telethon.sync import TelegramClient, events
from telethon.sessions import StringSession
from telethon.tl.functions.channels import GetMessagesRequest
from telethon.tl.functions.messages import GetHistoryRequest, GetMessagesViewsRequest, ImportChatInviteRequest
from telethon.tl.types import InputPeerChannel

API_ID2 = 21653220
API_HASH2 = '0a5270cde18fed26deef4a2a67916c9d'
session2 = '1ApWapzMBuzB3UkqtfBEFO1tyKtF-tYrS9q4OMC4nGr4WcIfFHxfZzVcbi0mAMQ2XcSAfFOLTGv86ofb5nY_cPq_SPYiWddhSa5YaQEGCZZ_izPfsbGvTSCuVgGghqmOXv_DRpd1KwM63JaZWC8zpaqJtBDRorspPG9mEZuxFEhsemupDikcl_LO7fZHleXZ_OWd5nKKXDXz1Os89nk0lP7ztk7dfbpyv46t2L98S1cFnZNOa6px2qOQfNiw6VFz7xU7B0uJymY6PA1VXQd48l6_oeWjod54PESIzQge0A39BI2HvKKIQeg_k1VXtx3C8nbuHZVOhFPNITErnpaopJBC7X0nRB3E='


API_ID=23473442
API_HASH='0cd1d983e8b65e8d992b3b756f9a8eb1'
session = '1ApWapzMBu8ainhul7iGgzwlE031N4KAYUlyzH_hzsI2hTRuAADEx8n2OI-Gbpc_TY1MchLNNAgRkEAkob2Hor8YEXtSo8IQCjsvu1AdZQqp-QGcnhUNFcqfa9D4-SZgl3A5i7Db-bafrAqmcSSvEEUZ6vsJuVatsFpJXJFVYk2RHeX9Bu1wBXNhQ4rPsVu4dpx7bkGbXftZDsSjQrmaSE3_rC4p3fbp5h8QrrkBB0K16VrSIts7N_N2MvbM6E9jWrRNAXj3UpZM2PfUblobn4Ewea3f1Kdu27_eMuKHPhc6S8lLxzA9IIgiIZcLCbUi-e4xRSv_5OYZ2FJ-EASuDmV8xJsnZ-b4='
logging.basicConfig(level=logging.INFO)

last = None

connection = sqlite3.connect("farming.db")
cursor = connection.cursor()
cursor.execute(
    """CREATE TABLE IF NOT EXISTS users(
id INTEGER PRIMARY KEY,
user_id INT,
time INT,
state1 INT,
state2 INT,
farm_location STR,
hp1 INT,
hp2 INT  
)
""")

def insert_into():
    profile = cursor.execute('SELECT * FROM users WHERE user_id = ?', (1776244625,)).fetchone()
    print(profile)
    if profile == None:
        cursor.execute('INSERT INTO users (user_id, time, state1, state2, farm_location, hp1, hp2) VALUES (?, ?, ?, ?, ?, ?, ?)', (1776244625, None, 0, 0, None, None, None))
        connection.commit()

insert_into()

client = TelegramClient(StringSession(session), API_ID, API_HASH, system_version='4.16.30-vxCUSTOM', device_model='aboba-windows-custom', app_version='1.1.0')
client2 = TelegramClient(StringSession(session), API_ID2, API_HASH2, system_version='4.16.30-vxCUSTOM', device_model='aboba-windows-custom', app_version='1.1.0')

@client.on(events.NewMessage)
async def my_event(event):
    global last
    log = await client.get_entity(-1002357683604)
    bot = await client.get_entity('t.me/EpsilionWarBot')
    profile = cursor.execute('SELECT * FROM users WHERE user_id = ?', (1776244625,)).fetchone()
    farm_location = profile[5]
    farm_locations = "üí¶ –°–∫–≤–æ–∑—å –≤–æ–¥–æ–ø–∞–¥ üåø –ó–∞—Ä–æ—Å–ª–∏ üíß –°–ø—É—Å–∫ –∫ –≤–æ–¥–µ üèñ –ü–æ–±–µ—Ä–µ–∂—å–µ"
    state1 = profile[3]
    state2 = profile[4]
    if str(event.message.from_id) == "PeerUser(user_id=1776244625)":
        if event.message.text == "/start_cup_up" and state1 == 1:
            await client.send_message(log, "–°–µ—Å—Å–∏—è —É–∂–µ –∑–∞–ø—É—â–µ–Ω–∞.")
        if event.message.text == "/start_cup_up" and state1 == 0:
            cursor.execute('UPDATE users SET state1 = ? WHERE user_id = ?', (1, 1776244625,))
            connection.commit()
            await asyncio.sleep(1)
            await client.send_message(log, "–°–µ—Å—Å–∏—è —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω–∞.")
            await cup_up()
        if event.message.text == "/stop_cup_up" and state1 == 0:
            await client.send_message(log, "–°–µ—Å—Å–∏—è —É–∂–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞.")
        if event.message.text == "/stop_cup_up" and state1 == 1:
            cursor.execute('UPDATE users SET state1 = ? WHERE user_id = ?', (0, 1776244625,))
            connection.commit()
            await client.send_message(log, "–°–µ—Å—Å–∏—è —É—Å–ø–µ—à–Ω–æ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞.")
        
        
        if event.message.text == "/start_farm" and state2 == 0 or state2 == 2:
            cursor.execute('UPDATE users SET state2 = ? WHERE user_id = ?', (1, 1776244625,))
            connection.commit()
            await client.send_message(log, "–í—ã —É—Å–ø–µ—à–Ω–æ –Ω–∞—á–∞–ª–∏ —Ñ–∞—Ä–º–∏—Ç—å.")
            await asyncio.sleep(1)
            await client.send_message(await client.get_entity('t.me/EpsilionWarBot'), "‚öîÔ∏è –ù–∞–π—Ç–∏ –≤—Ä–∞–≥–æ–≤")
        if event.message.text == "/start_farm" and state2 == 1:
            await client.send_message(log, "–í—ã —É–∂–µ —Ñ–∞—Ä–º–∏—Ç–µ.")
        if event.message.text == "/stop_farm" and state2 == 1 or state2 == 2:
            cursor.execute('UPDATE users SET state2 = ? WHERE user_id = ?', (0, 1776244625,))
            connection.commit()
            await client.send_message(log, "–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–∫–æ–Ω—á–∏–ª–∏ —Ñ–∞—Ä–º–∏—Ç—å.")
        if event.message.text == "/stop_farm" and state2 == 0:
            await client.send_message(log, "–í—ã —É–∂–µ –Ω–µ —Ñ–∞—Ä–º–∏—Ç–µ.")
        if "/set_location" in event.message.text:
            try:
                if event.message.text.split(" ")[0] == "/set_location":
                    await client.send_message(log, await set_farm_location(event.message.text.split("set_location ")[1]))
            except:
                await client.send_message(log, "–°–º–µ–Ω–∞ –ª–æ–∫–∞—Ü–∏–∏ –Ω–µ —É–¥–∞–ª–∞—Å—å.")
        
        
    try:
        text = event.message.text
    except:
        pass
    if "–≠–∫–∏–ø–∏—Ä–æ–≤–∫–∞" in text and "—Å–Ω—è—Ç–∞ –∏–∑-–∑–∞ –ø–æ–ª–æ–º–∫–∏" in text and str(event.message.peer_id) == "PeerUser(user_id=776510403)" and state2 == 1:
            cursor.execute('UPDATE users SET state2 = ? WHERE user_id = ?', (0, 1776244625,))
            connection.commit()
            await client.send_message(log, "–§–∞—Ä–º –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏–∑ –∑–∞ –ø–æ–ª–æ–º–∫–∏ —ç–∫–∏–ø–∏—Ä–æ–≤–∫–∏")
            await client.forward_messages(log, event.message.id, bot)
    await asyncio.sleep(1)
    profile = cursor.execute('SELECT * FROM users WHERE user_id = ?', (1776244625,)).fetchone()
    state2 = profile[4]
    hp1 = profile[6]
    hp2 = profile[7]


    if str(event.message.peer_id) == "PeerUser(user_id=776510403)" and state2 == 1:
        text = event.message.text
        text2 = None
        keyboard = str(event.message.reply_markup)
        if "ü§¥Ô∏è[–í–∞—Ç–∞–•—Ä—è–∫–∞](tg://user?id=1776244625) üî∏27 ‚ù§Ô∏è" in text:
            hp1 = int(text.split("ü§¥Ô∏è[–í–∞—Ç–∞–•—Ä—è–∫–∞](tg://user?id=1776244625) üî∏27 ‚ù§Ô∏è(")[1].split(")")[0].split("/")[0])
            hp2 = int(text.split("ü§¥Ô∏è[–í–∞—Ç–∞–•—Ä—è–∫–∞](tg://user?id=1776244625) üî∏27 ‚ù§Ô∏è(")[1].split(")")[0].split("/")[1])
            cursor.execute('UPDATE users SET hp1 = ? WHERE user_id = ?', (hp1, 1776244625,))
            cursor.execute('UPDATE users SET hp2 = ? WHERE user_id = ?', (hp2, 1776244625,))
            connection.commit()
        if "–¢–µ–∫—É—â–µ–µ –∑–¥–æ—Ä–æ–≤—å–µ:" in text:
            hp1 = int(text.split("‚ù§Ô∏è (")[1].split(")")[0].split("/")[0])
            hp2 = int(text.split("‚ù§Ô∏è (")[1].split(")")[0].split("/")[1])
            cursor.execute('UPDATE users SET hp1 = ? WHERE user_id = ?', (hp1, 1776244625,))
            cursor.execute('UPDATE users SET hp2 = ? WHERE user_id = ?', (hp2, 1776244625,))
            connection.commit()
            if hp2-hp1<=hp2/2:
                await asyncio.sleep(5)
                text2 = "‚öîÔ∏è –ù–∞–π—Ç–∏ –≤—Ä–∞–≥–æ–≤"
        if "–í –≥–æ–ª–æ–≤—É" in keyboard and "(0/" not in text:
            kombo = random.randint(1, 5)
            if kombo == 1:
                text2 = "–í –≥–æ–ª–æ–≤—É"
            if kombo == 2:
                text2 = "–í –≥—Ä—É–¥—å"
            if kombo == 3:
                text2 = "–í –∂–∏–≤–æ—Ç"
            if kombo == 4:
                text2 = "–í –ø–æ—è—Å"
            if kombo == 5:
                text2 = "–í –Ω–æ–≥–∏"
        elif "–ì–æ–ª–æ–≤—É, –≥—Ä—É–¥—å, –∂–∏–≤–æ—Ç" in keyboard:
            kombo = random.randint(1, 5)
            if kombo == 1:
                text2 = "–ì–æ–ª–æ–≤—É, –≥—Ä—É–¥—å, –∂–∏–≤–æ—Ç"
            if kombo == 2:
                text2 = "–ì—Ä—É–¥—å, –∂–∏–≤–æ—Ç, –ø–æ—è—Å"
            if kombo == 3:
                text2 = "–ñ–∏–≤–æ—Ç, –ø–æ—è—Å, –Ω–æ–≥–∏"
            if kombo == 4:
                text2 = "–ü–æ—è—Å, –Ω–æ–≥–∏, –≥–æ–ª–æ–≤–∞"
            if kombo == 5:
                text2 = "–ù–æ–≥–∏, –≥–æ–ª–æ–≤–∞, –≥—Ä—É–¥—å"
        elif "ü•™ –ë—É—Ç–µ—Ä–±—Ä–æ–¥ [III]" in keyboard and hp2-hp1>=300  and "(0/" not in text:
            text2 = "ü•™ –ë—É—Ç–µ—Ä–±—Ä–æ–¥ [III]"
        elif "üçû –ö–æ—Ä–∫–∞ —Ö–ª–µ–±–∞ [II]" in keyboard and hp2-hp1>=75  and "(0/" not in text:
            text2 = "üçû –ö–æ—Ä–∫–∞ —Ö–ª–µ–±–∞ [II]"
        elif "–î—Ä–µ–≤–Ω—è—è —Ä–µ–≥–µ–Ω–µ—Ä–∞—Ü–∏—è (1üó°)" in keyboard and hp2-hp1>=100 and "(0/" not in text:
            text2 = "–î—Ä–µ–≤–Ω—è—è —Ä–µ–≥–µ–Ω–µ—Ä–∞—Ü–∏—è (1üó°)"
        elif "–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è —Å–∏–ª–∞ (2üó°; 3üõ°)" in keyboard  and "(0/" not in text:
            text2 = "–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è —Å–∏–ª–∞ (2üó°; 3üõ°)"
        elif "–ü–æ –Ω–∞–∏—Ç–∏—é (3 ü•ä)" in keyboard and "(0/" not in text:
            text2 = "–ü–æ –Ω–∞–∏—Ç–∏—é (3 ü•ä)"
        elif "–¢–æ—á–Ω—ã–π –≤—ã–ø–∞–¥ (1ü•ä; 2üõ°;1 üå¨)" in keyboard and "(0/" not in text:
            text2 = "–¢–æ—á–Ω—ã–π –≤—ã–ø–∞–¥ (1ü•ä; 2üõ°;1 üå¨)"
        elif "–ê–∫—Ç–∏–≤–Ω–∞—è –∑–∞—â–∏—Ç–∞ (3 üõ°)" in keyboard and "(0/" not in text:
            text2 = "–ê–∫—Ç–∏–≤–Ω–∞—è –∑–∞—â–∏—Ç–∞ (3 üõ°)"
        elif "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å" in keyboard and "(0/" not in text:
            text2 = "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å"
        elif "‚öîÔ∏è –ù–∞–π—Ç–∏ –≤—Ä–∞–≥–æ–≤" in keyboard and hp2-hp1<hp2/2:
            await asyncio.sleep(5)
            state2 = cursor.execute('SELECT * FROM users WHERE user_id = ?', (1776244625,)).fetchone()[4]
            if state2 == 1:
                text2 = "‚öîÔ∏è –ù–∞–π—Ç–∏ –≤—Ä–∞–≥–æ–≤"
        elif "‚öîÔ∏è –ù–∞–π—Ç–∏ –≤—Ä–∞–≥–æ–≤" in keyboard and hp2-hp1>=hp2/2:
            text2 = "/use_middle_hpIII"
        elif "–í–∞—à–µ –∑–¥–æ—Ä–æ–≤—å–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ" in text:
            text2 = "‚öîÔ∏è –ù–∞–π—Ç–∏ –≤—Ä–∞–≥–æ–≤"
        elif text == "–ù–µ–≤–µ—Ä–Ω–æ, –±—É–¥—å –∞–∫–∫—É—Ä–∞—Ç–Ω–µ–µ –∏–ª–∏ –ø–æ–ø–∞–¥–µ—à—å –≤ —Ç—é—Ä—å–º—É":
            await asyncio.sleep(10)
            cursor.execute('UPDATE users SET state2 = ? WHERE user_id = ?', (2, 1776244625,))
            connection.commit()
            await client.send_message(await client.get_entity('t.me/gpt3_unlim_chatbot'), f"{last}\n\n–ü–∏—à–∏ —Ç–æ–ª—å–∫–æ –æ—Ç–≤–µ—Ç –∏ –Ω–∏—á–µ–≥–æ –±–æ–ª—å—à–µ. \n–≥–æ—Ä–æ–¥ –¶*—Ä—Ç–∞=–¶–∏—Ä—Ç–∞ –ú*–ª–µ–¥–æ–Ω=–ú–∏–ª–µ–¥–æ–Ω üê∫=–≤–æ–ª–∫ –ø*—Ç–Ω–∏—Ü–∞=–ø—è—Ç–Ω—Ü–∏–∞ –∏*–ª—å=–∏—é–ª—å –∫–æ–ª–æ*–µ—Ü=–∫–æ–ª–æ–¥–µ—Ü *–æ–±–∞–∫–∞=—Å–æ–±–∞–∫–∞ —Å—Ç–æ–ª–∏—Ü–∞ –≠–ø—Å–∏–ª–∏–æ–Ω–∞=–ú–∏–ª–µ–¥–æ–Ω üçå=–±–∞–Ω–∞–Ω ü§°= –∫–ª–æ—É–Ω *–æ—è–±—Ä—å=–Ω–æ—è–±—Ä—å")
            await asyncio.sleep(10)
            await client.send_message(await client.get_entity('t.me/gpt3_unlim_chatbot'), "–û—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é –¥–∏–∞–ª–æ–≥–∞")
        elif "–¢—ã –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ —Ç—é—Ä—å–º—É" in text:
            await client.send_message(bot, "3")
            await client.send_message(bot, "üó∫–ö–∞—Ä—Ç–∞")
            await asyncio.sleep(3)
            await client.send_message(bot, "üèõ –¶–∏—Ä—Ç–∞")
            await asyncio.sleep(60)
            await client.send_message(log, f"–í—ã –ø–æ–ø–∞–ª–∏ –≤ —Ç—é—Ä—å–º—É \n\n{last}")
            await client.send_message(bot, "2")
        elif "–¢—ã –ø–æ–±–µ–¥–∏–ª —Å–≤–æ–µ–≥–æ –≤—Ä–∞–≥–∞" in text:
            text2 = "‚úÖ –ó–∞–±—Ä–∞—Ç—å –Ωa–≥—Ä–∞–¥—É"
            await client.forward_messages(log, event.message.id, bot)
        elif "–ø–æ–ø—ã—Ç–∞–ª—Å—è —Å–±–µ–∂–∞—Ç—å" in text and "–í –∑–æ–Ω—É –æ—Ö–æ—Ç—ã" in keyboard:
            text2 = "–í –∑–æ–Ω—É –æ—Ö–æ—Ç—ã"
            await client.forward_messages(log, event.message.id, bot)
        try:
            if str(text.split(" ")[1].replace("*", "")).split("\n")[0] == "–¶–∏—Ä—Ç–∞":
                await client.send_message(bot, "üè°üèõ –ì—Ä–µ–π—Ç-–ô–µ–ª–¥–µ–º")
            if str(text.split(" ")[1].replace("*", "")).split("\n")[0] == "–ì—Ä–µ–π—Ç-–ô–µ–ª–¥–µ–º":
                if farm_location in farm_locations:
                    await client.send_message(bot, "üèûüèõ –û–∑–µ—Ä–æ –≠–ø—Å–∏–ª")
                else:
                    await client.send_message(bot, "‚öìüèõ –ß—ë—Ä—Ç–æ–≤–∞ –±—É—Ö—Ç–∞")
            elif str(text.split(" ")[1].replace("*", "")).split("\n")[0] != farm_location.split(" ")[1] and farm_location in keyboard:
                await client.send_message(bot, farm_location)
        except:
            pass
        try:
            if text.split(".")[0] == "–ù–∞ –ø—É—Ç–∏ —Ç—ã –≤—Å—Ç—Ä–µ—Ç–∏–ª –∫–∞–ø—á—É":
                cursor.execute('UPDATE users SET state2 = ? WHERE user_id = ?', (2, 1776244625,))
                connection.commit()
                await client.send_message(await client.get_entity('t.me/gpt3_unlim_chatbot'), f"{text}\n\n–ü–∏—à–∏ —Ç–æ–ª—å–∫–æ –æ—Ç–≤–µ—Ç –∏ –Ω–∏—á–µ–≥–æ –±–æ–ª—å—à–µ. \n–≥–æ—Ä–æ–¥ –¶*—Ä—Ç–∞=–¶–∏—Ä—Ç–∞ –ú*–ª–µ–¥–æ–Ω=–ú–∏–ª–µ–¥–æ–Ω üê∫=–≤–æ–ª–∫ –ø*—Ç–Ω–∏—Ü–∞=–ø—è—Ç–Ω—Ü–∏–∞ –∏*–ª—å=–∏—é–ª—å –∫–æ–ª–æ*–µ—Ü=–∫–æ–ª–æ–¥–µ—Ü *–æ–±–∞–∫–∞=—Å–æ–±–∞–∫–∞ —Å—Ç–æ–ª–∏—Ü–∞ –≠–ø—Å–∏–ª–∏–æ–Ω–∞=–ú–∏–ª–µ–¥–æ–Ω üçå=–±–∞–Ω–∞–Ω ü§°= –∫–ª–æ—É–Ω *–æ—è–±—Ä—å=–Ω–æ—è–±—Ä—å")
                last = text
                await asyncio.sleep(10)
                await client.send_message(await client.get_entity('t.me/gpt3_unlim_chatbot'), "–û—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é –¥–∏–∞–ª–æ–≥–∞")
                await client.send_message(await client.get_entity('t.me/gpt3_unlim_chatbot'), "Reset dilog history")
        except:
            pass
        try:
            if "–¢—ã –æ—Ç–ø—Ä–∞–≤–ª—è–µ—à—å—Å—è –≤ –±–ª–∏–∂–∞–π—à–∏–π –≥–æ—Ä–æ–¥ –Ω–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ" in text or "–¢—ã –±—ã–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å—Å—è –≤ –≥–æ—Ä–æ–¥" in text:
                await client.send_message(bot, farm_location)
                await client.forward_messages(log, event.message.id, bot)
        except:
            pass
        if text2 != None:
            await client.send_message(bot, text2)
    if str(event.message.peer_id) == "PeerUser(user_id=5815596965)" and state2 == 2:
        cursor.execute('UPDATE users SET state2 = ? WHERE user_id = ?', (1, 1776244625,))
        connection.commit()
        await client.send_message(bot, event.message.text)
            

async def set_farm_location(location):
    cursor.execute('UPDATE users SET farm_location = ? WHERE user_id = ?', (location, 1776244625,))
    connection.commit()
    return(f"–£—Å–ø–µ—à–Ω–æ –∑–∞–¥–∞–Ω–∞ –ª–æ–∫–∞—Ü–∏—è {location}.")

async def set_minhp(hp):
    cursor.execute('UPDATE users SET minhp = ? WHERE user_id = ?', (hp, 1776244625,))
    connection.commit()
    return(f"–£—Å–ø–µ—à–Ω–æ –∑–∞–¥–∞–Ω–æ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ —Ö–ø {hp}.")

async def cup_up():
    state1 = cursor.execute('SELECT * FROM users WHERE user_id = ?', (1776244625,)).fetchone()[3]
    while state1 == 1:
        bot1 = await client.get_entity('t.me/CupLegendBot')
        await client.send_message(bot1, "/cup_up")
        await asyncio.sleep(310)
        state1 = cursor.execute('SELECT * FROM users WHERE user_id = ?', (1776244625,)).fetchone()[3]



import asyncio
import logging
import sqlite3

from aiogram import Bot, Dispatcher, types
from aiogram import F
from aiogram.types import Message, InlineKeyboardButton, WebAppInfo, CallbackQuery, ChosenInlineResult
from aiogram.utils.keyboard import InlineKeyboardBuilder

BOT_TOKEN = '7775440771:AAFLb1IJg1gOoQmnhNosUKkvg0eG_VC_YPg'
bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

logging.basicConfig(level=logging.INFO)
connection2 = sqlite3.connect("RP.db")
cursor2 = connection2.cursor()
cursor2.execute(
    """CREATE TABLE IF NOT EXISTS msg(
id INTEGER PRIMARY KEY,
username INT,
text STR,
sender INT
)
""")


rp_commands = ["–ø–Ω—É—Ç—å", "–æ–±–Ω—è—Ç—å", "–ø–æ—Ü–µ–ª–æ–≤–∞—Ç—å", "—É–¥–∞—Ä–∏—Ç—å", "–ø–æ–≥–ª–∞–¥–∏—Ç—å","—É–∫—É—Å–∏—Ç—å", "–∑–∞—â–µ–∫–æ—Ç–∞—Ç—å", "–ø–æ–∫–æ–ª–æ—Ç–∏—Ç—å", "–ø–æ–±–∏—Ç—å","–ø–æ—Ö–ª–æ–ø–∞—Ç—å –ø–æ –ø–ª–µ—á—É", "–ø–æ–∂–∞—Ç—å —Ä—É–∫—É", "—Å—Ö–≤–∞—Ç–∏—Ç—å –∑–∞ —Ä—É–∫—É", "–ø–æ—Ç—è–Ω—É—Ç—å –∑–∞ —Ä—É–∫—É","–ø–æ—Å—Ç—É—á–∞—Ç—å –ø–æ –≥–æ–ª–æ–≤–µ", "–ø–æ—Ç–µ—Ä–µ—Ç—å –≥–æ–ª–æ–≤—É", "–ø–æ–≥–ª–∞–¥–∏—Ç—å –ø–æ —Å–ø–∏–Ω–µ", "–ø–æ–≥–ª–∞–¥–∏—Ç—å –ø–æ —â–µ–∫–µ", "–ø–æ—Ü–µ–ª–æ–≤–∞—Ç—å –≤ —â–µ–∫—É", "–ø–æ—Ü–µ–ª–æ–≤–∞—Ç—å –≤ –ª–æ–±","–ø–æ—Ü–µ–ª–æ–≤–∞—Ç—å –≤ –≥—É–±—ã", "–∑–∞–∫—Ä–∏—á–∞—Ç—å –Ω–∞", "–ø—Ä–æ—à–µ–ø—Ç–∞—Ç—å –Ω–∞ —É—à–∫–æ", "–ø–æ–ø—Ä–æ—Å–∏—Ç—å –ø—Ä–æ—â–µ–Ω–∏—è —É", "–ø–æ–±–ª–∞–≥–æ–¥–∞—Ä–∏—Ç—å", "–ø–æ–¥–º–∏–≥–Ω—É—Ç—å","—É–ª—ã–±–Ω—É—Ç—å—Å—è", "–Ω–∞—Ö–º—É—Ä–∏—Ç—å—Å—è", "–ø–æ–∫–∞–∑–∞—Ç—å —è–∑—ã–∫", "–æ—Ç–≤–µ—Ä–Ω—É—Ç—å—Å—è –æ—Ç","—Å–ø—Ä—è—Ç–∞—Ç—å—Å—è –∑–∞", "–ø–æ–¥–æ–π—Ç–∏ –∫", "–æ—Ç–æ–π—Ç–∏ –æ—Ç", "–ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞","–ø–æ–º–∞—Ö–∞—Ç—å —Ä—É–∫–æ–π", "–ø–æ–∫–∞–∑–∞—Ç—å –∫—É–ª–∞–∫", "—Å–¥–µ–ª–∞—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ","–∑–∞–≤—è–∑–∞—Ç—å —à–Ω—É—Ä–∫–∏", "–¥–∞—Ç—å –ø–æ–ø–∏—Ç—å", "–¥–∞—Ç—å –ø–æ–µ—Å—Ç—å","–∑–∞–±—Ä–∞—Ç—å –µ–¥—É", "—É–±–∏—Ç—å", "—Å–¥–µ–ª–∞—Ç—å –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç", "—Å–∫–∞–∑–∞—Ç—å —Å–ø–∞—Å–∏–±–æ","—Å–∫–∞–∑–∞—Ç—å –ø–æ–∂–∞–ª—É–π—Å—Ç–∞", "–ø–æ–ø—Ä–æ—Å–∏—Ç—å –ø–æ–º–æ—â–∏", "–ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å –Ω–∞ —Å–≤–∏–¥–∞–Ω–∏–µ", "–ø–æ–¥–∞—Ä–∏—Ç—å —Ü–≤–µ—Ç–æ–∫", "–ø–æ–¥–∞—Ä–∏—Ç—å –ø–æ–¥–∞—Ä–æ–∫", "–ø–æ–ø—Ä–æ—Å–∏—Ç—å —Ç–µ–ª–µ—Ñ–æ–Ω","—Å–¥–µ–ª–∞—Ç—å —Ñ–æ—Ç–æ", "–ø–æ—Ç–∞–Ω—Ü–µ–≤–∞—Ç—å —Å", "—Å–ø–µ—Ç—å –ø–µ—Å–Ω—é –¥–ª—è", "—Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å –∞–Ω–µ–∫–¥–æ—Ç", "–ø–æ–¥–µ–ª–∏—Ç—å—Å—è —Å–µ–∫—Ä–µ—Ç–æ–º", "—Å–ø—Ä–æ—Å–∏—Ç—å —Å–æ–≤–µ—Ç–∞"]

@dp.message(F.text)
async def handle_rp_command(message: Message):
  if(message.text.split("‚Ñ¢")[0] == "app"):
        await message.answer(message.text.split("‚Ñ¢")[1], reply_markup=InlineKeyboardBuilder().add(InlineKeyboardButton(text=message.text.split("‚Ñ¢")[2], web_app=WebAppInfo(url=message.text.split("‚Ñ¢")[3]))).as_markup())
        await message.delete()
  reply_to_message = message.reply_to_message
  if reply_to_message:
    user_mention = message.from_user.full_name
    reply_user_mention = reply_to_message.from_user.full_name
    action = message.text.lower()
    if action == "/delete" and str(message.from_user.id) == "1776244625":
        await message.delete()
        await asyncio.sleep(10)
        await reply_to_message.delete()
    if action == "/delete_long" and str(message.from_user.id) == "1776244625":
        await message.delete()
        await asyncio.sleep(60)
        await reply_to_message.delete()
    if " " in action:
        if action.split(" ")[0] == "/delete_all" and str(message.from_user.id) == "1776244625":
            await message.delete()
            await asyncio.sleep(1)
            id = message.reply_to_message.message_id
            chat_id = message.chat.id
            i = int(action.split(" ")[1])
            while i != 0:
                try:
                    await bot.delete_message(chat_id, id)
                    id = int(id)-1
                    i = i-1
                except:
                    id = int(id)-1
                await asyncio.sleep(2)
        if action.split(" ")[0] == "/mrp" and str(message.from_user.id) == "1776244625":
            li = list(message.text)
            li[0] = ''
            li[1] = ''
            li[2] = ''
            li[3] = ''
            li[4] = ''
            text = ''.join(li)
            if message.reply_to_message == None:
                await message.answer(text)
                await message.delete()
            else:
                await message.reply_to_message.reply(text)
                await message.delete()


    if action in rp_commands :
        await message.delete()

    if action == "–ø–Ω—É—Ç—å":
      text = f"–û–±–µ–∑—å—è–Ω–∞ –ø–æ –∏–º–µ–Ω–∏ {user_mention} –ø–Ω—É–ª–∞ –æ–±–µ–∑—å—è–Ω—É –ø–æ –∏–º–µ–Ω–∏ {reply_user_mention}"
    elif action == "–æ–±–Ω—è—Ç—å":
      text = f"–û–±–µ–∑—å—è–Ω–∞ –ø–æ –∏–º–µ–Ω–∏ {user_mention} –æ–±–Ω—è–ª–∞ –æ–±–µ–∑—å—è–Ω—É –ø–æ –∏–º–µ–Ω–∏ {reply_user_mention}"
    elif action == "–ø–æ—Ü–µ–ª–æ–≤–∞—Ç—å":
      text = f"–û–±–µ–∑—å—è–Ω–∞ –ø–æ –∏–º–µ–Ω–∏ {user_mention} –ø–æ—Ü–µ–ª–æ–≤–∞–ª–∞ –æ–±–µ–∑—å—è–Ω—É –ø–æ –∏–º–µ–Ω–∏ {reply_user_mention}"
    elif action == "—É–¥–∞—Ä–∏—Ç—å":
      text = f"–û–±–µ–∑—å—è–Ω–∞ –ø–æ –∏–º–µ–Ω–∏ {user_mention} —É–¥–∞—Ä–∏–ª–∞ –æ–±–µ–∑—å—è–Ω—É –ø–æ –∏–º–µ–Ω–∏ {reply_user_mention}"
    elif action == "–ø–æ–≥–ª–∞–¥–∏—Ç—å":
      text = f"–û–±–µ–∑—å—è–Ω–∞ –ø–æ –∏–º–µ–Ω–∏ {user_mention} –ø–æ–≥–ª–∞–¥–∏–ª–∞ –æ–±–µ–∑—å—è–Ω—É –ø–æ –∏–º–µ–Ω–∏ {reply_user_mention}"
    elif action == "—É–∫—É—Å–∏—Ç—å":
        text = f"–û–±–µ–∑—å—è–Ω–∞ –ø–æ –∏–º–µ–Ω–∏ {user_mention} —É–∫—É—Å–∏–ª–∞ –æ–±–µ–∑—å—è–Ω—É –ø–æ –∏–º–µ–Ω–∏ {reply_user_mention}"
    elif action == "–∑–∞—â–µ–∫–æ—Ç–∞—Ç—å":
        text = f"–û–±–µ–∑—å—è–Ω–∞ –ø–æ –∏–º–µ–Ω–∏ {user_mention} –∑–∞—â–µ–∫–æ—Ç–∞–ª–∞ –æ–±–µ–∑—å—è–Ω—É –ø–æ –∏–º–µ–Ω–∏ {reply_user_mention}"
    elif action == "–ø–æ–∫–æ–ª–æ—Ç–∏—Ç—å":
        text = f"–û–±–µ–∑—å—è–Ω–∞ –ø–æ –∏–º–µ–Ω–∏ {user_mention} –ø–æ–∫–æ–ª–æ—Ç–∏–ª–∞ –æ–±–µ–∑—å—è–Ω—É –ø–æ –∏–º–µ–Ω–∏ {reply_user_mention}"
    elif action == "–ø–æ–±–∏—Ç—å":
         text = f"–û–±–µ–∑—å—è–Ω–∞ –ø–æ –∏–º–µ–Ω–∏ {user_mention} –ø–æ–±–∏–ª–∞ –æ–±–µ–∑—å—è–Ω—É –ø–æ –∏–º–µ–Ω–∏ {reply_user_mention}"
    elif action == "–ø–æ—Ö–ª–æ–ø–∞—Ç—å –ø–æ –ø–ª–µ—á—É":
        text = f"–û–±–µ–∑—å—è–Ω–∞ –ø–æ –∏–º–µ–Ω–∏ {user_mention} –ø–æ—Ö–ª–æ–ø–∞–ª–∞ –ø–æ –ø–ª–µ—á—É –æ–±–µ–∑—å—è–Ω—É –ø–æ –∏–º–µ–Ω–∏ {reply_user_mention}"
    elif action == "–ø–æ–∂–∞—Ç—å —Ä—É–∫—É":
        text = f"–û–±–µ–∑—å—è–Ω–∞ –ø–æ –∏–º–µ–Ω–∏ {user_mention} –ø–æ–∂–∞–ª–∞ —Ä—É–∫—É –æ–±–µ–∑—å—è–Ω–µ –ø–æ –∏–º–µ–Ω–∏ {reply_user_mention}"
    elif action == "—Å—Ö–≤–∞—Ç–∏—Ç—å –∑–∞ —Ä—É–∫—É":
        text = f"–û–±–µ–∑—å—è–Ω–∞ –ø–æ –∏–º–µ–Ω–∏ {user_mention} —Å—Ö–≤–∞—Ç–∏–ª–∞ –∑–∞ —Ä—É–∫—É –æ–±–µ–∑—å—è–Ω—É –ø–æ –∏–º–µ–Ω–∏ {reply_user_mention}"
    elif action == "–ø–æ—Ç—è–Ω—É—Ç—å –∑–∞ —Ä—É–∫—É":
        text = f"–û–±–µ–∑—å—è–Ω–∞ –ø–æ –∏–º–µ–Ω–∏ {user_mention} –ø–æ—Ç—è–Ω—É–ª–∞ –∑–∞ —Ä—É–∫—É –æ–±–µ–∑—å—è–Ω—É –ø–æ –∏–º–µ–Ω–∏ {reply_user_mention}"
    elif action == "–ø–æ—Å—Ç—É—á–∞—Ç—å –ø–æ –≥–æ–ª–æ–≤–µ":
        text = f"–û–±–µ–∑—å—è–Ω–∞ –ø–æ –∏–º–µ–Ω–∏ {user_mention} –ø–æ—Å—Ç—É—á–∞–ª–∞ –ø–æ –≥–æ–ª–æ–≤–µ –æ–±–µ–∑—å—è–Ω—É –ø–æ –∏–º–µ–Ω–∏ {reply_user_mention}"
    elif action == "–ø–æ—Ç–µ—Ä–µ—Ç—å –≥–æ–ª–æ–≤—É":
        text = f"–û–±–µ–∑—å—è–Ω–∞ –ø–æ –∏–º–µ–Ω–∏ {user_mention} –ø–æ—Ç–µ—Ä–ª–∞ –≥–æ–ª–æ–≤—É –æ–±–µ–∑—å—è–Ω–µ –ø–æ –∏–º–µ–Ω–∏ {reply_user_mention}"
    elif action == "–ø–æ–≥–ª–∞–¥–∏—Ç—å –ø–æ —Å–ø–∏–Ω–µ":
        text = f"–û–±–µ–∑—å—è–Ω–∞ –ø–æ –∏–º–µ–Ω–∏ {user_mention} –ø–æ–≥–ª–∞–¥–∏–ª–∞ –ø–æ —Å–ø–∏–Ω–µ –æ–±–µ–∑—å—è–Ω—É –ø–æ –∏–º–µ–Ω–∏ {reply_user_mention}"
    elif action == "–ø–æ–≥–ª–∞–¥–∏—Ç—å –ø–æ —â–µ–∫–µ":
        text = f"–û–±–µ–∑—å—è–Ω–∞ –ø–æ –∏–º–µ–Ω–∏ {user_mention} –ø–æ–≥–ª–∞–¥–∏–ª–∞ –ø–æ —â–µ–∫–µ –æ–±–µ–∑—å—è–Ω—É –ø–æ –∏–º–µ–Ω–∏ {reply_user_mention}"
    elif action == "–ø–æ—Ü–µ–ª–æ–≤–∞—Ç—å –≤ —â–µ–∫—É":
        text = f"–û–±–µ–∑—å—è–Ω–∞ –ø–æ –∏–º–µ–Ω–∏ {user_mention} –ø–æ—Ü–µ–ª–æ–≤–∞–ª–∞ –≤ —â–µ–∫—É –æ–±–µ–∑—å—è–Ω—É –ø–æ –∏–º–µ–Ω–∏ {reply_user_mention}"
    elif action == "–ø–æ—Ü–µ–ª–æ–≤–∞—Ç—å –≤ –ª–æ–±":
        text = f"–û–±–µ–∑—å—è–Ω–∞ –ø–æ –∏–º–µ–Ω–∏ {user_mention} –ø–æ—Ü–µ–ª–æ–≤–∞–ª–∞ –≤ –ª–æ–± –æ–±–µ–∑—å—è–Ω—É –ø–æ –∏–º–µ–Ω–∏ {reply_user_mention}"
    elif action == "–ø–æ—Ü–µ–ª–æ–≤–∞—Ç—å –≤ –≥—É–±—ã":
        text = f"–û–±–µ–∑—å—è–Ω–∞ –ø–æ –∏–º–µ–Ω–∏ {user_mention} –ø–æ—Ü–µ–ª–æ–≤–∞–ª–∞ –≤ –≥—É–±—ã –æ–±–µ–∑—å—è–Ω—É –ø–æ –∏–º–µ–Ω–∏ {reply_user_mention}"
    elif action == "–∑–∞–∫—Ä–∏—á–∞—Ç—å –Ω–∞":
        text = f"–û–±–µ–∑—å—è–Ω–∞ –ø–æ –∏–º–µ–Ω–∏ {user_mention} –∑–∞–∫—Ä–∏—á–∞–ª–∞ –Ω–∞ –æ–±–µ–∑—å—è–Ω—É –ø–æ –∏–º–µ–Ω–∏ {reply_user_mention}"
    elif action == "–ø—Ä–æ—à–µ–ø—Ç–∞—Ç—å –Ω–∞ —É—à–∫–æ":
        text = f"–û–±–µ–∑—å—è–Ω–∞ –ø–æ –∏–º–µ–Ω–∏ {user_mention} –ø—Ä–æ—à–µ–ø—Ç–∞–ª–∞ –Ω–∞ —É—à–∫–æ –æ–±–µ–∑—å—è–Ω–µ –ø–æ –∏–º–µ–Ω–∏ {reply_user_mention}"
    elif action == "–ø–æ–ø—Ä–æ—Å–∏—Ç—å –ø—Ä–æ—â–µ–Ω–∏—è —É":
        text = f"–û–±–µ–∑—å—è–Ω–∞ –ø–æ –∏–º–µ–Ω–∏ {user_mention} –ø–æ–ø—Ä–æ—Å–∏–ª–∞ –ø—Ä–æ—â–µ–Ω–∏—è —É –æ–±–µ–∑—å—è–Ω—ã –ø–æ –∏–º–µ–Ω–∏ {reply_user_mention}"
    elif action == "–ø–æ–±–ª–∞–≥–æ–¥–∞—Ä–∏—Ç—å":
        text = f"–û–±–µ–∑—å—è–Ω–∞ –ø–æ –∏–º–µ–Ω–∏ {user_mention} –ø–æ–±–ª–∞–≥–æ–¥–∞—Ä–∏–ª–∞ –æ–±–µ–∑—å—è–Ω—É –ø–æ –∏–º–µ–Ω–∏ {reply_user_mention}"
    elif action == "–ø–æ–¥–º–∏–≥–Ω—É—Ç—å":
        text = f"–û–±–µ–∑—å—è–Ω–∞ –ø–æ –∏–º–µ–Ω–∏ {user_mention} –ø–æ–¥–º–∏–≥–Ω—É–ª–∞ –æ–±–µ–∑—å—è–Ω–µ –ø–æ –∏–º–µ–Ω–∏ {reply_user_mention}"
    elif action == "—É–ª—ã–±–Ω—É—Ç—å—Å—è":
        text = f"–û–±–µ–∑—å—è–Ω–∞ –ø–æ –∏–º–µ–Ω–∏ {user_mention} —É–ª—ã–±–Ω—É–ª–∞—Å—å –æ–±–µ–∑—å—è–Ω–µ –ø–æ –∏–º–µ–Ω–∏ {reply_user_mention}"
    elif action == "–Ω–∞—Ö–º—É—Ä–∏—Ç—å—Å—è":
        text = f"–û–±–µ–∑—å—è–Ω–∞ –ø–æ –∏–º–µ–Ω–∏ {user_mention} –Ω–∞—Ö–º—É—Ä–∏–ª–∞—Å—å –Ω–∞ –æ–±–µ–∑—å—è–Ω—É –ø–æ –∏–º–µ–Ω–∏ {reply_user_mention}"
    elif action == "–ø–æ–∫–∞–∑–∞—Ç—å —è–∑—ã–∫":
        text = f"–û–±–µ–∑—å—è–Ω–∞ –ø–æ –∏–º–µ–Ω–∏ {user_mention} –ø–æ–∫–∞–∑–∞–ª–∞ —è–∑—ã–∫ –æ–±–µ–∑—å—è–Ω–µ –ø–æ –∏–º–µ–Ω–∏ {reply_user_mention}"
    elif action == "–æ—Ç–≤–µ—Ä–Ω—É—Ç—å—Å—è –æ—Ç":
        text = f"–û–±–µ–∑—å—è–Ω–∞ –ø–æ –∏–º–µ–Ω–∏ {user_mention} –æ—Ç–≤–µ—Ä–Ω—É–ª–∞—Å—å –æ—Ç –æ–±–µ–∑—å—è–Ω—ã –ø–æ –∏–º–µ–Ω–∏ {reply_user_mention}"
    elif action == "—Å–ø—Ä—è—Ç–∞—Ç—å—Å—è –∑–∞":
        text = f"–û–±–µ–∑—å—è–Ω–∞ –ø–æ –∏–º–µ–Ω–∏ {user_mention} —Å–ø—Ä—è—Ç–∞–ª–∞—Å—å –∑–∞ –æ–±–µ–∑—å—è–Ω—É –ø–æ –∏–º–µ–Ω–∏ {reply_user_mention}"
    elif action == "–ø–æ–¥–æ–π—Ç–∏ –∫":
        text = f"–û–±–µ–∑—å—è–Ω–∞ –ø–æ –∏–º–µ–Ω–∏ {user_mention} –ø–æ–¥–æ—à–ª–∞ –∫ –æ–±–µ–∑—å—è–Ω–µ –ø–æ –∏–º–µ–Ω–∏ {reply_user_mention}"
    elif action == "–æ—Ç–æ–π—Ç–∏ –æ—Ç":
        text = f"–û–±–µ–∑—å—è–Ω–∞ –ø–æ –∏–º–µ–Ω–∏ {user_mention} –æ—Ç–æ—à–ª–∞ –æ—Ç –æ–±–µ–∑—å—è–Ω—ã –ø–æ –∏–º–µ–Ω–∏ {reply_user_mention}"
    elif action == "–ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞":
        text = f"–û–±–µ–∑—å—è–Ω–∞ –ø–æ –∏–º–µ–Ω–∏ {user_mention} –ø–æ—Å–º–æ—Ç—Ä–µ–ª–∞ –Ω–∞ –æ–±–µ–∑—å—è–Ω—É –ø–æ –∏–º–µ–Ω–∏ {reply_user_mention}"
    elif action == "–ø–æ–º–∞—Ö–∞—Ç—å —Ä—É–∫–æ–π":
        text = f"–û–±–µ–∑—å—è–Ω–∞ –ø–æ –∏–º–µ–Ω–∏ {user_mention} –ø–æ–º–∞—Ö–∞–ª–∞ —Ä—É–∫–æ–π –æ–±–µ–∑—å—è–Ω–µ –ø–æ –∏–º–µ–Ω–∏ {reply_user_mention}"
    elif action == "–ø–æ–∫–∞–∑–∞—Ç—å –∫—É–ª–∞–∫":
        text = f"–û–±–µ–∑—å—è–Ω–∞ –ø–æ –∏–º–µ–Ω–∏ {user_mention} –ø–æ–∫–∞–∑–∞–ª–∞ –∫—É–ª–∞–∫ –æ–±–µ–∑—å—è–Ω–µ –ø–æ –∏–º–µ–Ω–∏ {reply_user_mention}"
    elif action == "—Å–¥–µ–ª–∞—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ":
        text = f"–û–±–µ–∑—å—è–Ω–∞ –ø–æ –∏–º–µ–Ω–∏ {user_mention} —Å–¥–µ–ª–∞–ª–∞ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ–±–µ–∑—å—è–Ω–µ –ø–æ –∏–º–µ–Ω–∏ {reply_user_mention}"
    elif action == "–∑–∞–≤—è–∑–∞—Ç—å —à–Ω—É—Ä–∫–∏":
        text = f"–û–±–µ–∑—å—è–Ω–∞ –ø–æ –∏–º–µ–Ω–∏ {user_mention} –∑–∞–≤—è–∑–∞–ª–∞ —à–Ω—É—Ä–∫–∏ –æ–±–µ–∑—å—è–Ω–µ –ø–æ –∏–º–µ–Ω–∏ {reply_user_mention}"
    elif action == "–¥–∞—Ç—å –ø–æ–ø–∏—Ç—å":
        text = f"–û–±–µ–∑—å—è–Ω–∞ –ø–æ –∏–º–µ–Ω–∏ {user_mention} –¥–∞–ª–∞ –ø–æ–ø–∏—Ç—å –æ–±–µ–∑—å—è–Ω–µ –ø–æ –∏–º–µ–Ω–∏ {reply_user_mention}"
    elif action == "–¥–∞—Ç—å –ø–æ–µ—Å—Ç—å":
        text = f"–û–±–µ–∑—å—è–Ω–∞ –ø–æ –∏–º–µ–Ω–∏ {user_mention} –¥–∞–ª–∞ –ø–æ–µ—Å—Ç—å –æ–±–µ–∑—å—è–Ω–µ –ø–æ –∏–º–µ–Ω–∏ {reply_user_mention}"
    elif action == "–∑–∞–±—Ä–∞—Ç—å –µ–¥—É":
        text = f"–û–±–µ–∑—å—è–Ω–∞ –ø–æ –∏–º–µ–Ω–∏ {user_mention} –∑–∞–±—Ä–∞–ª–∞ –µ–¥—É —É –æ–±–µ–∑—å—è–Ω—ã –ø–æ –∏–º–µ–Ω–∏ {reply_user_mention}"
    elif action == "—É–±–∏—Ç—å":
        text = f"–û–±–µ–∑—å—è–Ω–∞ –ø–æ –∏–º–µ–Ω–∏ {user_mention} —É–±–∏–ª–∞ –æ–±–µ–∑—å—è–Ω—É –ø–æ –∏–º–µ–Ω–∏ {reply_user_mention}"
    elif action == "—Å–¥–µ–ª–∞—Ç—å –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç":
        text = f"–û–±–µ–∑—å—è–Ω–∞ –ø–æ –∏–º–µ–Ω–∏ {user_mention} —Å–¥–µ–ª–∞–ª–∞ –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç –æ–±–µ–∑—å—è–Ω–µ –ø–æ –∏–º–µ–Ω–∏ {reply_user_mention}"
    elif action == "—Å–∫–∞–∑–∞—Ç—å —Å–ø–∞—Å–∏–±–æ":
        text = f"–û–±–µ–∑—å—è–Ω–∞ –ø–æ –∏–º–µ–Ω–∏ {user_mention} —Å–∫–∞–∑–∞–ª–∞ —Å–ø–∞—Å–∏–±–æ –æ–±–µ–∑—å—è–Ω–µ –ø–æ –∏–º–µ–Ω–∏ {reply_user_mention}"
    elif action == "—Å–∫–∞–∑–∞—Ç—å –ø–æ–∂–∞–ª—É–π—Å—Ç–∞":
        text = f"–û–±–µ–∑—å—è–Ω–∞ –ø–æ –∏–º–µ–Ω–∏ {user_mention} —Å–∫–∞–∑–∞–ª–∞ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –æ–±–µ–∑—å—è–Ω–µ –ø–æ –∏–º–µ–Ω–∏ {reply_user_mention}"
    elif action == "–ø–æ–ø—Ä–æ—Å–∏—Ç—å –ø–æ–º–æ—â–∏":
        text = f"–û–±–µ–∑—å—è–Ω–∞ –ø–æ –∏–º–µ–Ω–∏ {user_mention} –ø–æ–ø—Ä–æ—Å–∏–ª–∞ –ø–æ–º–æ—â–∏ —É –æ–±–µ–∑—å—è–Ω—ã –ø–æ –∏–º–µ–Ω–∏ {reply_user_mention}"
    elif action == "–ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å –Ω–∞ —Å–≤–∏–¥–∞–Ω–∏–µ":
        text = f"–û–±–µ–∑—å—è–Ω–∞ –ø–æ –∏–º–µ–Ω–∏ {user_mention} –ø—Ä–∏–≥–ª–∞—Å–∏–ª–∞ –Ω–∞ —Å–≤–∏–¥–∞–Ω–∏–µ –æ–±–µ–∑—å—è–Ω—É –ø–æ –∏–º–µ–Ω–∏ {reply_user_mention}"
    elif action == "–ø–æ–¥–∞—Ä–∏—Ç—å —Ü–≤–µ—Ç–æ–∫":
        text = f"–û–±–µ–∑—å—è–Ω–∞ –ø–æ –∏–º–µ–Ω–∏ {user_mention} –ø–æ–¥–∞—Ä–∏–ª–∞ —Ü–≤–µ—Ç–æ–∫ –æ–±–µ–∑—å—è–Ω–µ –ø–æ –∏–º–µ–Ω–∏ {reply_user_mention}"
    elif action == "–ø–æ–¥–∞—Ä–∏—Ç—å –ø–æ–¥–∞—Ä–æ–∫":
        text = f"–û–±–µ–∑—å—è–Ω–∞ –ø–æ –∏–º–µ–Ω–∏ {user_mention} –ø–æ–¥–∞—Ä–∏–ª–∞ –ø–æ–¥–∞—Ä–æ–∫ –æ–±–µ–∑—å—è–Ω–µ –ø–æ –∏–º–µ–Ω–∏ {reply_user_mention}"
    elif action == "–ø–æ–ø—Ä–æ—Å–∏—Ç—å —Ç–µ–ª–µ—Ñ–æ–Ω":
        text = f"–û–±–µ–∑—å—è–Ω–∞ –ø–æ –∏–º–µ–Ω–∏ {user_mention} –ø–æ–ø—Ä–æ—Å–∏–ª–∞ —Ç–µ–ª–µ—Ñ–æ–Ω —É –æ–±–µ–∑—å—è–Ω—ã –ø–æ –∏–º–µ–Ω–∏ {reply_user_mention}"
    elif action == "—Å–¥–µ–ª–∞—Ç—å —Ñ–æ—Ç–æ":
        text = f"–û–±–µ–∑—å—è–Ω–∞ –ø–æ –∏–º–µ–Ω–∏ {user_mention} —Å–¥–µ–ª–∞–ª–∞ —Ñ–æ—Ç–æ —Å –æ–±–µ–∑—å—è–Ω–æ–π –ø–æ –∏–º–µ–Ω–∏ {reply_user_mention}"
    elif action == "–ø–æ—Ç–∞–Ω—Ü–µ–≤–∞—Ç—å —Å":
        text = f"–û–±–µ–∑—å—è–Ω–∞ –ø–æ –∏–º–µ–Ω–∏ {user_mention} –ø–æ—Ç–∞–Ω—Ü–µ–≤–∞–ª–∞ —Å –æ–±–µ–∑—å—è–Ω–æ–π –ø–æ –∏–º–µ–Ω–∏ {reply_user_mention}"
    elif action == "—Å–ø–µ—Ç—å –ø–µ—Å–Ω—é –¥–ª—è":
        text = f"–û–±–µ–∑—å—è–Ω–∞ –ø–æ –∏–º–µ–Ω–∏ {user_mention} —Å–ø–µ–ª–∞ –ø–µ—Å–Ω—é –¥–ª—è –æ–±–µ–∑—å—è–Ω—ã –ø–æ –∏–º–µ–Ω–∏ {reply_user_mention}"
    elif action == "—Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å –∞–Ω–µ–∫–¥–æ—Ç":
        text = f"–û–±–µ–∑—å—è–Ω–∞ –ø–æ –∏–º–µ–Ω–∏ {user_mention} —Ä–∞—Å—Å–∫–∞–∑–∞–ª–∞ –∞–Ω–µ–∫–¥–æ—Ç –æ–±–µ–∑—å—è–Ω–µ –ø–æ –∏–º–µ–Ω–∏ {reply_user_mention}"
    elif action == "–ø–æ–¥–µ–ª–∏—Ç—å—Å—è —Å–µ–∫—Ä–µ—Ç–æ–º":
        text = f"–û–±–µ–∑—å—è–Ω–∞ –ø–æ –∏–º–µ–Ω–∏ {user_mention} –ø–æ–¥–µ–ª–∏–ª–∞—Å—å —Å–µ–∫—Ä–µ—Ç–æ–º —Å –æ–±–µ–∑—å—è–Ω–æ–π –ø–æ –∏–º–µ–Ω–∏ {reply_user_mention}"
    elif action == "—Å–ø—Ä–æ—Å–∏—Ç—å —Å–æ–≤–µ—Ç–∞":
        text = f"–û–±–µ–∑—å—è–Ω–∞ –ø–æ –∏–º–µ–Ω–∏ {user_mention} —Å–ø—Ä–æ—Å–∏–ª–∞ —Å–æ–≤–µ—Ç–∞ —É –æ–±–µ–∑—å—è–Ω—ã –ø–æ –∏–º–µ–Ω–∏ {reply_user_mention}"

    if action in rp_commands :
        await reply_to_message.answer(text)

def db():
    id = cursor2.execute("SELECT id FROM msg ORDER BY id DESC LIMIT 1").fetchall()
    try:
        return(f"msg_{str(id).split('(')[1].split(',')[0]}")
    except:
        return("None")

@dp.inline_query()
async def inline_callback(inline: types.InlineQuery):
    results = []
    tryy = 0
    try:
        username = inline.query.split(" ")[0]
        if username[0] != '@':
            tryy = 1
        li = list(inline.query)
        li[len(username)] = '‚Ñ¢'
        text0 = ''.join(li)
        text1 =  text0.split("‚Ñ¢")[1]
        if len(text1) > 200:
            tryy = 1
    except:
        tryy = 1
    if(tryy == 0):
        results.append(types.InlineQueryResultArticle(
            id='1',
            title=f"–ù–∞–ø–∏—Å–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ {username}.",
            input_message_content=types.InputTextMessageContent(
                message_text=f"–ü–æ–¥–æ–∂–¥–∏—Ç–µ 3 —Å–µ–∫—É–Ω–¥–æ—á–∫–∏... \n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞...",
            ),
            reply_markup=InlineKeyboardBuilder().add(InlineKeyboardButton(text="–ü–æ–¥–æ–∂–¥–∏—Ç–µ 3 —Å–µ–∫—É–Ω–¥—ã...", callback_data=db())).as_markup()
        ))
    else:
        results.append(types.InlineQueryResultArticle(
            id='1',
            title=f"–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ *click*",
            input_message_content=types.InputTextMessageContent(
                message_text='–ü–∏—à–∏—Ç–µ –Ω–∞–ø—Ä–∏–º–µ—Ä —Ç–∞–∫: \n@V_RP_BOT @Mishi5782 –¢—ã –æ–±–µ–∑—å—è–Ω–∞ \n@V_RP_BOT @{username} {text} \n–¢–∞–∫ –∂–µ –ø–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∏–º–≤–æ–ª–æ–≤ –Ω–µ –¥–æ–ª–∂–Ω–æ –ø—Ä–µ–≤—ã—à–∞—Ç—å 200 —Å–∏–º–≤–æ–ª–æ–≤.',
            ),
        ))
    await inline.answer(
        results=results,
        button=types.InlineQueryResultsButton(
            text='_RP_',
            start_parameter='fromInline',
        ),
        cache_time=2,
    )

@dp.callback_query()
async def callback(callback: CallbackQuery):
    data = callback.data
    if data.split("_")[0] == "msg":
        try:
            text = str(cursor.execute("SELECT text FROM msg WHERE id = ?", (data.split("_")[1],)).fetchone()).split("'")[1]
            username = str(cursor.execute("SELECT username FROM msg WHERE id = ?", (data.split("_")[1],)).fetchone()).split("'")[1]
            if f"@{callback.from_user.username}" == username or str(callback.from_user.id) == "1776244625":
                await callback.answer(text, show_alert=True)
            else:
                await callback.answer(f"–≠—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –º–æ–∂–µ—Ç –ø—Ä–æ—á–∏—Ç–∞—Ç—å —Ç–æ–ª—å–∫–æ {username}", show_alert=True)
        except:
            await callback.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞!", show_alert=True)

@dp.chosen_inline_result()
async def inline_result(inline: ChosenInlineResult):
    tryy = 0
    try:
        username = inline.query.split(" ")[0]
        if username[0] != '@':
            tryy = 1
        li = list(inline.query)
        li[len(username)] = '‚Ñ¢'
        text0 = ''.join(li)
        text1 =  text0.split("‚Ñ¢")[1]
        if len(text1) > 200:
            tryy = 1
    except:
        tryy = 1
    if tryy == 0:
        await asyncio.sleep(3)
        cursor2.execute("INSERT INTO msg (username, text, sender) VALUES (?, ?, ?)", (username, text1, f"@{inline.from_user.username}",))
        connection2.commit()
        msg_id = inline.inline_message_id
        await bot.edit_message_text(text=f"–≠—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –º–æ–∂–µ—Ç –ø—Ä–æ—á–∏—Ç–∞—Ç—å —Ç–æ–ª—å–∫–æ {username}", inline_message_id=msg_id)
        await bot.edit_message_reply_markup(reply_markup=InlineKeyboardBuilder().add(InlineKeyboardButton(text="_–ü—Ä–æ—á–∏—Ç–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ_", callback_data=db())).as_markup(), inline_message_id=msg_id)




if __name__ == '__main__':
    client.start()
    client.run_until_disconnected()
    asyncio.run(main())

async def main():
    await dp.start_polling(bot)
