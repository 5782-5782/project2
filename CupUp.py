import telethon
import logging
import sqlite3
import asyncio
import datetime
import random
import time
from telethon.sync import TelegramClient, events
from telethon.sessions import StringSession
from telethon.tl.functions.channels import GetMessagesRequest
from telethon.tl.functions.messages import GetHistoryRequest, GetMessagesViewsRequest, ImportChatInviteRequest
from telethon.tl.types import InputPeerChannel

API_ID=23473442
API_HASH='0cd1d983e8b65e8d992b3b756f9a8eb1'
SESSION = '1ApWapzMBu2Uk4Hp0Dqd4ldUu8GFEmdHQ5zD6pbfsQQsIVG5Rj-seeoOb7frP90rMSQERLRJ4bfIxcclM8KPO6rZ72bkXxAWqS73ZHUGdGCthAeZ9o-UOUziuByOa4pbVDcAoKwAj9cjS0JE3SjKzTtPwc0TlkZUoPz0ypQ4zHIC1QDu7t7B_INbLgq2SD11159aVXPnU6-yabzqA12BmZPyrLRQvQfE0nENrhg81Yrtt7OnILwghPxRIPTNG5St7Fd36_wraJfd-o--KxMerI6fNk1YfYb3O8Qg1MnCBMrixnFQUtRAFh68lXlVU2nXZF9E4G06C9N1r6iKO_d5OY45vucBWJ90='

logging.basicConfig(level=logging.INFO)

last = None
pers=[]
state=0
tume=136



connection = sqlite3.connect("farming.db")
cursor = connection.cursor()
cursor.execute(
    """CREATE TABLE IF NOT EXISTS users(
id INTEGER PRIMARY KEY,
user_id INT,
time INT,
state1 INT,
state2 INT,
farm_location STR,
hp1 INT,
hp2 INT  
)
""")

def insert_into():
    profile = cursor.execute('SELECT * FROM users WHERE user_id = ?', (1776244625,)).fetchone()
    print(profile)
    if profile == None:
        cursor.execute('INSERT INTO users (user_id, time, state1, state2, farm_location, hp1, hp2) VALUES (?, ?, ?, ?, ?, ?, ?)', (1776244625, None, 0, 0, None, None, None))
        connection.commit()

insert_into()

client = TelegramClient(StringSession(SESSION), API_ID, API_HASH, system_version='4.16.30-vxCUSTOM', device_model='aboba-windows-custom', app_version='1.1.0')

async def pon():
    global state, pers
    pers=[]
    bot = await client.get_entity('CupLegendBot')
    i = 0
    perso = ["–ü—É–¥–µ–ª—å2", "–ü—É–¥–µ–ª—å3", "–ü—É–¥–µ–ª—å4", "–ü—É–¥–µ–ª—å5", "–ü—É–¥–µ–ª—å6", "–ü—É–¥–µ–ª—å7", "–ü—É–¥–µ–ª—å8", "–ü—É–¥–µ–ª—å9", "–ü—É–¥–µ–ª—å10", "–ü—É–¥–µ–ª—å"]
    await client.send_message(bot, "–í–ù–ò–ú–ê–ù–ò–ï!!!!\n–ù–ï –ò–°–ü–û–õ–¨–ó–£–ô–¢–ï –ë–û–¢–ê –ù–ò–ö–ê–ö–ò–ú –û–ë–†–ê–ó–û–ú –ü–û –ö–†–ê–ô–ù–ï–ô –ú–ï–†–ï 2-3 –ú–ò–ù–£–¢–´!!!!\n–ù–ï –ù–ê–ñ–ò–ú–ê–ô–¢–ï –ö–ù–û–ü–ö–ò –ò –ù–ï –ü–ò–®–ò–¢–ï –õ–Æ–ë–´–ï –°–û–û–ë–©–ï–ù–ò–Ø –ë–û–¢–£!!!\n–ï–°–õ–ò –í–´ –°–õ–£–ß–ê–ô–ù–û –≠–¢–û –°–î–ï–õ–ê–õ–ò, –ü–ï–†–ï–ó–ê–ü–£–°–¢–ò–¢–ï –°–ö–†–ò–ü–¢!!!")
    await asyncio.sleep(1)
    while i < 10:
        if state==1:
            await client.send_message(bot, "/start MyHeros")
            await asyncio.sleep(1)
            msgs = await client.get_messages('CupLegendBot', 1)
            msg = msgs[0]
            await asyncio.sleep(1)
            await msg.click(text=perso[i])
            await asyncio.sleep(1)
            msgs = await client.get_messages('CupLegendBot', 1)
            pers.append(msgs[0])
            await asyncio.sleep(1)
        i = i+1

async def cup_up():
    global state, tume
    while state==1:
        date1=int(time.time())
        await cup_up2()
        date2=int(time.time())
        date=date2-date1
        await asyncio.sleep(tume-date)
            

async def cup_up2():
    global pers, state
    await asyncio.sleep(1)
    bot = await client.get_entity('CupLegendBot')
    i = 0
    while i < 10:
        if state==1:
            msg = pers[i]
            await msg.click(text="–í—ã–±—Ä–∞—Ç—å")
            await asyncio.sleep(1)
            await client.send_message(bot, "/cup_up")
            await asyncio.sleep(1)
        i = i+1

@client.on(events.NewMessage)
async def my_event(event):
    global last, state
    if event.message.text=="/start_cup" and state==0 and event.message.to_dict()['from_id']['user_id']==1776244625:
        state=1
        await pon()
        await cup_up()
    if event.message.text=="/stop_cup" and state==1 and event.message.to_dict()['from_id']['user_id']==1776244625:
        state=0
    log = await client.get_entity(-1002357683604)
    bot = await client.get_entity('t.me/EpsilionWarBot')
    profile = cursor.execute('SELECT * FROM users WHERE user_id = ?', (1776244625,)).fetchone()
    farm_location = profile[5]
    farm_locations = "üí¶ –°–∫–≤–æ–∑—å –≤–æ–¥–æ–ø–∞–¥ üåø –ó–∞—Ä–æ—Å–ª–∏ üíß –°–ø—É—Å–∫ –∫ –≤–æ–¥–µ üèñ –ü–æ–±–µ—Ä–µ–∂—å–µ"
    state1 = profile[3]
    state2 = profile[4]
    if str(event.message.from_id) == "PeerUser(user_id=1776244625)":
        if event.message.text == "/start_farm" and state2 == 0 or state2 == 2:
            cursor.execute('UPDATE users SET state2 = ? WHERE user_id = ?', (1, 1776244625,))
            connection.commit()
            await client.send_message(log, "–í—ã —É—Å–ø–µ—à–Ω–æ –Ω–∞—á–∞–ª–∏ —Ñ–∞—Ä–º–∏—Ç—å.")
            await asyncio.sleep(1)
            await client.send_message(await client.get_entity('t.me/EpsilionWarBot'), "‚öîÔ∏è –ù–∞–π—Ç–∏ –≤—Ä–∞–≥–æ–≤")
        if event.message.text == "/start_farm" and state2 == 1:
            await client.send_message(log, "–í—ã —É–∂–µ —Ñ–∞—Ä–º–∏—Ç–µ.")
        if event.message.text == "/stop_farm" and state2 == 1 or state2 == 2:
            cursor.execute('UPDATE users SET state2 = ? WHERE user_id = ?', (0, 1776244625,))
            connection.commit()
            await client.send_message(log, "–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–∫–æ–Ω—á–∏–ª–∏ —Ñ–∞—Ä–º–∏—Ç—å.")
        if event.message.text == "/stop_farm" and state2 == 0:
            await client.send_message(log, "–í—ã —É–∂–µ –Ω–µ —Ñ–∞—Ä–º–∏—Ç–µ.")
        if "/set_location" in event.message.text:
            try:
                if event.message.text.split(" ")[0] == "/set_location":
                    await client.send_message(log, await set_farm_location(event.message.text.split("set_location ")[1]))
            except:
                await client.send_message(log, "–°–º–µ–Ω–∞ –ª–æ–∫–∞—Ü–∏–∏ –Ω–µ —É–¥–∞–ª–∞—Å—å.")
        
        if event.message.text == "/count@Mishi5782":
            counts = int(event.message.id)+1
            chat_id = await client.get_entity(int(f"-100{event.message.peer_id.channel_id}"))
            await client.delete_messages(chat_id, event.message.id)
            msg = await client.send_message(chat_id, f"–ü—Ä–æ—á–∏—Ç–∞–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: 1/{counts}\n\n–ü–æ–¥—Å—á—ë—Ç –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è")
            i = 1
            while i <=counts:
                try:
                    msg2 = await client.get_messages(chat_id, ids=i)
                    user = await client.get_entity(msg2.from_id.user_id)
                    userid = f"@{user.username} {user.id}"
                    msg = await client.get_messages(chat_id, ids=counts)
                    if userid in msg.message:
                        count = int(msg.message.split(f"{userid} (")[1].split(")")[0])
                        await client.edit_message(chat_id, msg, msg.message.replace(f"{userid} ({count}", f"{userid} ({count+1}").replace(f"–ü—Ä–æ—á–∏—Ç–∞–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {i}/{counts}", f"–ü—Ä–æ—á–∏—Ç–∞–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {i+1}/{counts}"))
                    else:
                        await client.edit_message(chat_id, msg, msg.message.replace("\n\n–ü–æ–¥—Å—á—ë—Ç –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è", f"\n\n{userid} (1)\n\n–ü–æ–¥—Å—á—ë—Ç –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è").replace(f"–ü—Ä–æ—á–∏—Ç–∞–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {i}/{counts}", f"–ü—Ä–æ—á–∏—Ç–∞–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {i+1}/{counts}"))
                except:
                    msg = await client.get_messages(chat_id, ids=counts)
                    if "–£–¥–∞–ª—ë–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è (" in msg.message:
                        count = int(msg.message.split(f"–£–¥–∞–ª—ë–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è (")[1].split(")")[0])
                        await client.edit_message(chat_id, msg, msg.message.replace(f"–£–¥–∞–ª—ë–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è ({count}", f"–£–¥–∞–ª—ë–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è ({count+1}").replace(f"–ü—Ä–æ—á–∏—Ç–∞–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {i}/{counts}", f"–ü—Ä–æ—á–∏—Ç–∞–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {i+1}/{counts}"))
                    else:
                        await client.edit_message(chat_id, msg, msg.message.replace("\n\n–ü–æ–¥—Å—á—ë—Ç –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è", "\n\n–£–¥–∞–ª—ë–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è (1)\n\n–ü–æ–¥—Å—á—ë—Ç –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è").replace(f"–ü—Ä–æ—á–∏—Ç–∞–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {i}/{counts}", f"–ü—Ä–æ—á–∏—Ç–∞–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {i+1}/{counts}"))
                i = i+1
            msg = await client.get_messages(chat_id, ids=counts)
            await client.edit_message(chat_id, msg, msg.message.replace("\n\n–ü–æ–¥—Å—á—ë—Ç –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è", "\n\n–ü–æ–¥—Å—á—ë—Ç –æ–∫–æ–Ω—á–µ–Ω"))
            
    if str(event.message.from_id) == "PeerUser(user_id=6636749431)":
        if event.message.text == "/cupup2":
            await cup_up2()
    
    try:
        text = event.message.text
    except:
        pass
    if "–≠–∫–∏–ø–∏—Ä–æ–≤–∫–∞" in text and "—Å–Ω—è—Ç–∞ –∏–∑-–∑–∞ –ø–æ–ª–æ–º–∫–∏" in text and str(event.message.peer_id) == "PeerUser(user_id=776510403)" and state2 == 1:
            cursor.execute('UPDATE users SET state2 = ? WHERE user_id = ?', (0, 1776244625,))
            connection.commit()
            await client.send_message(log, "–§–∞—Ä–º –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏–∑ –∑–∞ –ø–æ–ª–æ–º–∫–∏ —ç–∫–∏–ø–∏—Ä–æ–≤–∫–∏")
            await client.forward_messages(log, event.message.id, bot)
    await asyncio.sleep(1)
    profile = cursor.execute('SELECT * FROM users WHERE user_id = ?', (1776244625,)).fetchone()
    state2 = profile[4]
    hp1 = profile[6]
    hp2 = profile[7]


    if str(event.message.peer_id) == "PeerUser(user_id=776510403)" and state2 == 1:
        text = event.message.text
        text2 = None
        keyboard = str(event.message.reply_markup)
        if "ü§¥Ô∏è[–í–∞—Ç–∞–•—Ä—è–∫–∞](tg://user?id=1776244625) üî∏29 ‚ù§Ô∏è" in text:
            hp1 = int(text.split("ü§¥Ô∏è[–í–∞—Ç–∞–•—Ä—è–∫–∞](tg://user?id=1776244625) üî∏29 ‚ù§Ô∏è(")[1].split(")")[0].split("/")[0])
            hp2 = int(text.split("ü§¥Ô∏è[–í–∞—Ç–∞–•—Ä—è–∫–∞](tg://user?id=1776244625) üî∏29 ‚ù§Ô∏è(")[1].split(")")[0].split("/")[1])
            cursor.execute('UPDATE users SET hp1 = ? WHERE user_id = ?', (hp1, 1776244625,))
            cursor.execute('UPDATE users SET hp2 = ? WHERE user_id = ?', (hp2, 1776244625,))
            connection.commit()
        if "–¢–µ–∫—É—â–µ–µ –∑–¥–æ—Ä–æ–≤—å–µ:" in text:
            hp1 = int(text.split("‚ù§Ô∏è (")[1].split(")")[0].split("/")[0])
            hp2 = int(text.split("‚ù§Ô∏è (")[1].split(")")[0].split("/")[1])
            cursor.execute('UPDATE users SET hp1 = ? WHERE user_id = ?', (hp1, 1776244625,))
            cursor.execute('UPDATE users SET hp2 = ? WHERE user_id = ?', (hp2, 1776244625,))
            connection.commit()
            if hp2-hp1<=hp2/2:
                await asyncio.sleep(5)
                text2 = "‚öîÔ∏è –ù–∞–π—Ç–∏ –≤—Ä–∞–≥–æ–≤"
        if "–í –≥–æ–ª–æ–≤—É" in keyboard and "(0/" not in text:
            kombo = random.randint(1, 5)
            if kombo == 1:
                text2 = "–í –≥–æ–ª–æ–≤—É"
            if kombo == 2:
                text2 = "–í –≥—Ä—É–¥—å"
            if kombo == 3:
                text2 = "–í –∂–∏–≤–æ—Ç"
            if kombo == 4:
                text2 = "–í –ø–æ—è—Å"
            if kombo == 5:
                text2 = "–í –Ω–æ–≥–∏"
        elif "–ì–æ–ª–æ–≤—É, –≥—Ä—É–¥—å, –∂–∏–≤–æ—Ç" in keyboard:
            kombo = random.randint(1, 5)
            if kombo == 1:
                text2 = "–ì–æ–ª–æ–≤—É, –≥—Ä—É–¥—å, –∂–∏–≤–æ—Ç"
            if kombo == 2:
                text2 = "–ì—Ä—É–¥—å, –∂–∏–≤–æ—Ç, –ø–æ—è—Å"
            if kombo == 3:
                text2 = "–ñ–∏–≤–æ—Ç, –ø–æ—è—Å, –Ω–æ–≥–∏"
            if kombo == 4:
                text2 = "–ü–æ—è—Å, –Ω–æ–≥–∏, –≥–æ–ª–æ–≤–∞"
            if kombo == 5:
                text2 = "–ù–æ–≥–∏, –≥–æ–ª–æ–≤–∞, –≥—Ä—É–¥—å"
        elif "ü•™ –ë—É—Ç–µ—Ä–±—Ä–æ–¥ [III]" in keyboard and hp2-hp1>=300  and "(0/" not in text:
            text2 = "ü•™ –ë—É—Ç–µ—Ä–±—Ä–æ–¥ [III]"
        elif "üçû –ö–æ—Ä–∫–∞ —Ö–ª–µ–±–∞ [II]" in keyboard and hp2-hp1>=75  and "(0/" not in text:
            text2 = "üçû –ö–æ—Ä–∫–∞ —Ö–ª–µ–±–∞ [II]"
        elif "–î—Ä–µ–≤–Ω—è—è —Ä–µ–≥–µ–Ω–µ—Ä–∞—Ü–∏—è (1üó°)" in keyboard and hp2-hp1>=100 and "(0/" not in text:
            text2 = "–î—Ä–µ–≤–Ω—è—è —Ä–µ–≥–µ–Ω–µ—Ä–∞—Ü–∏—è (1üó°)"
        elif "–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è —Å–∏–ª–∞ (2üó°; 3üõ°)" in keyboard  and "(0/" not in text:
            text2 = "–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è —Å–∏–ª–∞ (2üó°; 3üõ°)"
        elif "–ü–æ –Ω–∞–∏—Ç–∏—é (3 ü•ä)" in keyboard and "(0/" not in text:
            text2 = "–ü–æ –Ω–∞–∏—Ç–∏—é (3 ü•ä)"
        elif "–¢–æ—á–Ω—ã–π –≤—ã–ø–∞–¥ (1ü•ä; 2üõ°;1 üå¨)" in keyboard and "(0/" not in text:
            text2 = "–¢–æ—á–Ω—ã–π –≤—ã–ø–∞–¥ (1ü•ä; 2üõ°;1 üå¨)"
        elif "–ê–∫—Ç–∏–≤–Ω–∞—è –∑–∞—â–∏—Ç–∞ (3 üõ°)" in keyboard and "(0/" not in text:
            text2 = "–ê–∫—Ç–∏–≤–Ω–∞—è –∑–∞—â–∏—Ç–∞ (3 üõ°)"
        elif "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å" in keyboard and "(0/" not in text:
            text2 = "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å"
        elif "‚öîÔ∏è –ù–∞–π—Ç–∏ –≤—Ä–∞–≥–æ–≤" in keyboard and hp2-hp1<hp2/2:
            await asyncio.sleep(5)
            state2 = cursor.execute('SELECT * FROM users WHERE user_id = ?', (1776244625,)).fetchone()[4]
            if state2 == 1:
                text2 = "‚öîÔ∏è –ù–∞–π—Ç–∏ –≤—Ä–∞–≥–æ–≤"
        elif "‚öîÔ∏è –ù–∞–π—Ç–∏ –≤—Ä–∞–≥–æ–≤" in keyboard and hp2-hp1>=hp2/2:
            text2 = "/use_middle_hpIII"
        elif "–í–∞—à–µ –∑–¥–æ—Ä–æ–≤—å–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ" in text:
            text2 = "‚öîÔ∏è –ù–∞–π—Ç–∏ –≤—Ä–∞–≥–æ–≤"
        elif text == "–ù–µ–≤–µ—Ä–Ω–æ, –±—É–¥—å –∞–∫–∫—É—Ä–∞—Ç–Ω–µ–µ –∏–ª–∏ –ø–æ–ø–∞–¥–µ—à—å –≤ —Ç—é—Ä—å–º—É":
            await asyncio.sleep(10)
            cursor.execute('UPDATE users SET state2 = ? WHERE user_id = ?', (2, 1776244625,))
            connection.commit()
            await client.send_message(await client.get_entity('t.me/gpt3_unlim_chatbot'), f"{last}\n\n–ü–∏—à–∏ —Ç–æ–ª—å–∫–æ –æ—Ç–≤–µ—Ç –∏ –Ω–∏—á–µ–≥–æ –±–æ–ª—å—à–µ. \n–≥–æ—Ä–æ–¥ –¶*—Ä—Ç–∞=–¶–∏—Ä—Ç–∞ –ú*–ª–µ–¥–æ–Ω=–ú–∏–ª–µ–¥–æ–Ω üê∫=–≤–æ–ª–∫ –ø*—Ç–Ω–∏—Ü–∞=–ø—è—Ç–Ω—Ü–∏–∞ –∏*–ª—å=–∏—é–ª—å –∫–æ–ª–æ*–µ—Ü=–∫–æ–ª–æ–¥–µ—Ü *–æ–±–∞–∫–∞=—Å–æ–±–∞–∫–∞ —Å—Ç–æ–ª–∏—Ü–∞ –≠–ø—Å–∏–ª–∏–æ–Ω–∞=–ú–∏–ª–µ–¥–æ–Ω üçå=–±–∞–Ω–∞–Ω ü§°= –∫–ª–æ—É–Ω *–æ—è–±—Ä—å=–Ω–æ—è–±—Ä—å")
            await asyncio.sleep(10)
            await client.send_message(await client.get_entity('t.me/gpt3_unlim_chatbot'), "–û—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é –¥–∏–∞–ª–æ–≥–∞")
        elif "–¢—ã –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ —Ç—é—Ä—å–º—É" in text:
            await client.send_message(bot, "3")
            await client.send_message(bot, "üó∫–ö–∞—Ä—Ç–∞")
            await asyncio.sleep(3)
            await client.send_message(bot, "üèõ –¶–∏—Ä—Ç–∞")
            await asyncio.sleep(60)
            await client.send_message(log, f"–í—ã –ø–æ–ø–∞–ª–∏ –≤ —Ç—é—Ä—å–º—É \n\n{last}")
            await client.send_message(bot, "2")
        elif "–¢—ã –ø–æ–±–µ–¥–∏–ª —Å–≤–æ–µ–≥–æ –≤—Ä–∞–≥–∞" in text:
            text2 = "‚úÖ –ó–∞–±—Ä–∞—Ç—å –Ωa–≥—Ä–∞–¥—É"
            await client.forward_messages(log, event.message.id, bot)
        elif "—Å–±–µ–∂–∞" in text and "–í –∑–æ–Ω—É –æ—Ö–æ—Ç—ã" in keyboard:
            text2 = "–í –∑–æ–Ω—É –æ—Ö–æ—Ç—ã"
            await client.forward_messages(log, event.message.id, bot)
        try:
            if str(text.split(" ")[1].replace("*", "")).split("\n")[0] == "–¶–∏—Ä—Ç–∞":
                await client.send_message(bot, "üè°üèõ –ì—Ä–µ–π—Ç-–ô–µ–ª–¥–µ–º")
            if str(text.split(" ")[1].replace("*", "")).split("\n")[0] == "–ì—Ä–µ–π—Ç-–ô–µ–ª–¥–µ–º":
                if farm_location in farm_locations:
                    await client.send_message(bot, "üèûüèõ –û–∑–µ—Ä–æ –≠–ø—Å–∏–ª")
                else:
                    await client.send_message(bot, "‚öìüèõ –ß—ë—Ä—Ç–æ–≤–∞ –±—É—Ö—Ç–∞")
            elif str(text.split(" ")[1].replace("*", "")).split("\n")[0] != farm_location.split(" ")[1] and farm_location in keyboard:
                await client.send_message(bot, "3")
                await asyncio.sleep(1)
                await client.send_message(bot, farm_location)
                await asyncio.sleep(1)
                await client.send_message(bot, "2")
        except:
            pass
        try:
            if text.split(".")[0] == "–ù–∞ –ø—É—Ç–∏ —Ç—ã –≤—Å—Ç—Ä–µ—Ç–∏–ª –∫–∞–ø—á—É":
                cursor.execute('UPDATE users SET state2 = ? WHERE user_id = ?', (2, 1776244625,))
                connection.commit()
                await client.send_message(await client.get_entity('t.me/gpt3_unlim_chatbot'), f"{text}\n\n–ü–∏—à–∏ —Ç–æ–ª—å–∫–æ –æ—Ç–≤–µ—Ç –∏ –Ω–∏—á–µ–≥–æ –±–æ–ª—å—à–µ. \n–≥–æ—Ä–æ–¥ –¶*—Ä—Ç–∞=–¶–∏—Ä—Ç–∞ –ú*–ª–µ–¥–æ–Ω=–ú–∏–ª–µ–¥–æ–Ω üê∫=–≤–æ–ª–∫ –ø*—Ç–Ω–∏—Ü–∞=–ø—è—Ç–Ω—Ü–∏–∞ –∏*–ª—å=–∏—é–ª—å –∫–æ–ª–æ*–µ—Ü=–∫–æ–ª–æ–¥–µ—Ü *–æ–±–∞–∫–∞=—Å–æ–±–∞–∫–∞ —Å—Ç–æ–ª–∏—Ü–∞ –≠–ø—Å–∏–ª–∏–æ–Ω–∞=–ú–∏–ª–µ–¥–æ–Ω üçå=–±–∞–Ω–∞–Ω ü§°= –∫–ª–æ—É–Ω *–æ—è–±—Ä—å=–Ω–æ—è–±—Ä—å")
                last = text
                await asyncio.sleep(10)
                await client.send_message(await client.get_entity('t.me/gpt3_unlim_chatbot'), "–û—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é –¥–∏–∞–ª–æ–≥–∞")
                await client.send_message(await client.get_entity('t.me/gpt3_unlim_chatbot'), "Reset dilog history")
        except:
            pass
        try:
            if "–¢—ã –æ—Ç–ø—Ä–∞–≤–ª—è–µ—à—å—Å—è –≤ –±–ª–∏–∂–∞–π—à–∏–π –≥–æ—Ä–æ–¥ –Ω–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ" in text or "–¢—ã –±—ã–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å—Å—è –≤ –≥–æ—Ä–æ–¥" in text:
                await client.forward_messages(log, event.message.id, bot)
                await client.send_message(bot, "3")
                await asyncio.sleep(1)
                await client.send_message(bot, farm_location)
                await asyncio.sleep(1)
                await client.send_message(bot, "2")
        except:
            pass
        if text2 != None:
            await client.send_message(bot, text2)
    if str(event.message.peer_id) == "PeerUser(user_id=5815596965)" and state2 == 2:
        cursor.execute('UPDATE users SET state2 = ? WHERE user_id = ?', (1, 1776244625,))
        connection.commit()
        await client.send_message(bot, event.message.text)
            

async def set_farm_location(location):
    cursor.execute('UPDATE users SET farm_location = ? WHERE user_id = ?', (location, 1776244625,))
    connection.commit()
    return(f"–£—Å–ø–µ—à–Ω–æ –∑–∞–¥–∞–Ω–∞ –ª–æ–∫–∞—Ü–∏—è {location}.")

async def set_minhp(hp):
    cursor.execute('UPDATE users SET minhp = ? WHERE user_id = ?', (hp, 1776244625,))
    connection.commit()
    return(f"–£—Å–ø–µ—à–Ω–æ –∑–∞–¥–∞–Ω–æ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ —Ö–ø {hp}.")


if __name__ == '__main__':
    client.start()
    client.run_until_disconnected()
